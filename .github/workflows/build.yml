name: Build Windows Base Training AMI

# Controls when the action will run. 

on:
  # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]
  workflow_dispatch:
  schedule:
  - cron: '1 1 * * 0'  # once a week on sunday 

jobs:
  packer:
    runs-on: macOS-latest
    name: Build Temp macOS for Build Pipeline
    steps:



    - name: Branch name
      run: echo running on branch ${GITHUB_REF##*/}
      
    - name: Checkout files from commit tree
      uses: actions/checkout@v2

    - name: Install qemu
      run: |
        curl -fsSL -o install.sh https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh
        /bin/bash install.sh
        brew tap hashicorp/tap
        brew install qemu hashicorp/tap/packer

    - name: Stage and pull down ISO's
      run: |
        mkdir /Users/runner/windows-build
        mkdir /Users/runner/windows-build/isos
        curl --silent -LJ "https://software-download.microsoft.com/download/pr/18363.418.191007-0143.19h2_release_svc_refresh_CLIENTENTERPRISEEVAL_OEMRET_x64FRE_en-us.iso" -o "/Users/runner/windows-build/isos/windows10.iso"
        curl --silent -LJ "https://fedorapeople.org/groups/virt/virtio-win/direct-downloads/archive-virtio/virtio-win-0.1.189-1/virtio-win-0.1.189.iso" -o "/Users/runner/windows-build/isos/virtio-windows10.iso"
        sudo touch /.VolumeIcon.icns
 
# This take the our private ssh key and ships it to the ubuntu instance, that will then provision AWS  
      
    - name: Docker-> Packer -> Ansible -> AWS -> AMI -> WIN!
      run: |
        PACKER_CACHE_DIR=/Users/runner/windows-build/packer_cache PACKER_LOG=1 sudo packer build -var-file variables.json windows.json
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: eu-central-1
        SERVICE_PASSWORD: ${{ secrets.SERVICE_PASSWORD }}
        STACK_PASSWORD: ${{ secrets.STACK_PASSWORD }}
        RUNNER_IPV4: ${{ steps.ip.outputs.ipv4 }}
        KEY_FILE: ${{ secrets.KEY_FILE }}
        EC_AUTH: ${{ secrets.EC_AUTH}}
        EC_ID: ${{ secrets.EC_ID }}
        SSH_FILE: ${{ secrets.SSH_FILE }}
        AWS_MAX_ATTEMPTS: 90
        AWS_POLL_DELAY_SECONDS: 60
